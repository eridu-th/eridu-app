!function(e){var n={};function t(i){if(n[i])return n[i].exports;var s=n[i]={i:i,l:!1,exports:{}};return e[i].call(s.exports,s,s.exports,t),s.l=!0,s.exports}t.m=e,t.c=n,t.d=function(e,n,i){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:i})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(t.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var s in e)t.d(i,s,function(n){return e[n]}.bind(null,s));return i},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=0)}([function(e,n,t){"use strict";t.r(n);const i=(window.location.hostname,"http://localhost:8080");var s={host:i,headerEndpoint:i+"/header",checkTokenEndpoint:i+"/checkToken",loginEndpoint:i+"/users/login",signupEndpoint:i+"/users",verifyEmailEndpoint:i+"/users/exist/email",verifyPhoneEndpoint:i+"/users/exist/phone",sendResetPasswordEndpoint:i+"/resetToken",verifyResetTokenEndpoint:i+"/resetToken/verify",resetPasswordEndpoint:i+"/resetToken/resetpassword"};async function a(){try{return await fetch(s.headerEndpoint,{method:"post",mod:"cors",headers:{"Content-Type":"application/json"}}).then(e=>e.json()).then(e=>e)}catch(e){return console.log(e),null}}async function o(e=""){let n=!1;if(e){const t=await a();200===(await fetch(s.checkTokenEndpoint,{method:"post",headers:{Authorization:e,"Content-type":"application/json","client-token":t["client-token"],"time-stamp":t["time-stamp"],"time-signature":t["time-signature"]}}).then(e=>e.json()).then(e=>e).catch(e=>e)).resCode&&(n=!0)}return n}const r=document.querySelector(".container");function l(){sessionStorage.clear(),localStorage.clear(),window.location.hash="",r.innerHTML='\n        <div id="login_form">\n            <div id="eridu_logo">\n                <img src="https://i.imgur.com/iHPqdEf.png" alt="eridu_logo">\n            </div>\n            <form action="" autocomplete="off">\n                <div class="mb-3">\n                    <label for="email" class="form-label">Email</label>\n                    <input type="text" class="form-control" id="email" aria-describedby="emailHelp"\n                        autocomplete="off">\n                    <div class="invalid-feedback">Your email is not correct</div>\n                </div>\n                <div class="mb-3">\n                    <label for="password" class="form-label">Password</label>\n                    <input type="password" class="form-control" id="password">\n                    <div class="invalid-feedback">Your password is not correct</div>\n                </div>\n                <div class="mb-3 form-check">\n                    <input type="checkbox" class="form-check-input" id="remember_me" checked>\n                    <label class="form-check-label" for="remember_me">Remember me</label>\n                </div>\n                <button type="submit" class="btn btn-primary">Login</button>\n                <div>\n                    <div>\n                    <a href="#signup">Sign Up</a>\n                    </div>\n                    <div>\n                    <a href="#forgetpassword">Forget Password?</a>\n                    </div>\n                </div>\n            </form>\n        </div>\n    ';const e=document.querySelector("#login_form"),n=document.querySelector("#email"),t=document.querySelector("#password"),i=document.querySelector("#remember_me");function o(){t.classList.remove("is-invalid"),n.classList.remove("is-invalid")}n.addEventListener("input",o),t.addEventListener("input",o),e.addEventListener("submit",(async function(e){e.preventDefault();const o=n.value,r=t.value;if(o&&r){if(o&&r){if(await async function(e="",n="",t=!1){const i=await a(),o=await fetch(s.loginEndpoint,{method:"post",headers:{"Content-type":"application/json","client-token":i["client-token"],"time-stamp":i["time-stamp"],"time-signature":i["time-signature"]},body:JSON.stringify({email:e,password:n,keepAlive:t?1:0})}).then(e=>e.json()).then(e=>e).catch(e=>e);return 200===o.resCode?(t?(localStorage.setItem("token",o.token),localStorage.setItem("user",o.user)):(sessionStorage.setItem("token",o.token),sessionStorage.setItem("user",o.user)),window.location.hash="dashboard",!0):(console.log(o),!1)}(o,r,i.checked))return}n.classList.add("is-invalid"),t.classList.add("is-invalid")}else n.classList.add("is-invalid"),t.classList.add("is-invalid")}))}const c={token:null,userEmail:null,emailVerified:!1,resetForm:null};async function d(){var e;(e=c).token=null,e.userEmail=null,e.emailVerified=!1,e.resetForm=null;document.querySelector(".container").innerHTML=`\n    <div id="reset_password_form">\n        <div id="eridu_logo">\n        <img src="${s.host}/images/eridu_logo.png" alt="eridu_logo">\n        </div>\n        <h1>Reset Password</h1>\n        <hr>\n        <div id="reset_password_input">\n        </div>\n        <hr>\n        <div id="backToLogin">\n            <a class="btn btn-secondary" href="#">Back to Login</a>\n        </div>\n    </div>\n    `;const n=new URLSearchParams(window.location.search).get("jwt");if(n){const e=await a();if(200===(await fetch(s.verifyResetTokenEndpoint,{method:"post",headers:{Authorization:n,"Content-type":"application/json","client-token":e["client-token"],"time-stamp":e["time-stamp"],"time-signature":e["time-signature"]}}).then(e=>e.json()).then(e=>e).catch(e=>e)).resCode)return c.token=n,function(e){document.querySelector("#reset_password_input").innerHTML='\n        <form action="" autocomplete="off" id="reset_password_form">\n            <div class="mb-3">\n                <label for="password" class="form-label">New Password</label>\n                <input type="password" class="form-control" id="password" required>\n                <div class="invalid-feedback">Your password do not match</div>\n            </div>\n            <div class="mb-3">\n                <label for="password_repeat" class="form-label">Confirm password</label>\n                <input type="password" class="form-control" id="password_repeat" required>\n                <div class="invalid-feedback">Your password do not match</div>\n            </div>\n            <div>\n                <button type="submit" class="btn btn-primary">Reset Password</button>\n            </div>\n        </form>\n    ';const n=document.querySelector("#reset_password_form"),t=n.querySelector("button"),i=[...n.querySelectorAll("input")];i.forEach(e=>{e.oninput=function(){i.forEach(e=>{e.classList.remove("is-invalid")})}}),t.onclick=async function(n){n.preventDefault();const t=i.map(e=>e.value?e.value:null);if(t[0]===t[1]&&t[0]){const n=await async function(e="",n="",t=""){if(e&&t){const i=await a();return await fetch(s.resetPasswordEndpoint,{method:"post",mod:"cors",headers:{Authorization:t,"Content-Type":"application/json","client-token":i["client-token"],"time-stamp":i["time-stamp"],"time-signature":i["time-signature"]},body:JSON.stringify({password:e,confirmPassword:n})}).then(e=>e.json()).then(e=>e).catch(e=>e)}return null}(t[0],t[1],e.token);200===n.resCode?(alert(n.message),window.location.hash=""):(console.log(n.message),alert(n.message))}else i.forEach(e=>{e.classList.add("is-invalid")})}}(c)}!function(){const e=document.querySelector("#reset_password_input");if(e){const n='\n        <form action="" id="submit_email" class="form-group">\n            <div class="input-group mb-3">\n                <span class="input-group-text"><i class="fas fa-envelope"></i></span>\n                <input data-type="email" value="" type="email" inputmode="email" class="form-control"\n                    aria-label="email" placeholder="Email" required>\n                    <div class="valid-feedback">This email is valid!</div>\n                <div class="invalid-feedback">Something went wrong...Please check the email again!</div>\n            </div>\n            <button class="btn btn-primary">Reset Password</button>\n        </form>\n        ';e.innerHTML=n,c.resetForm=n;const t=e.querySelector("#submit_email");t.querySelector("input").onchange=function(e){return async function(n){this.classList.remove("is-invalid"),this.classList.remove("is-valid");const t=n.target.value;401===(await u(t)).resCode?(this.classList.add("is-valid"),e.emailVerified=!0,e.userEmail=t):this.classList.add("is-invalid")}}(c),t&&(t.onsubmit=p(c))}}()}async function u(e){if(e){const n=await a();return await fetch(s.verifyEmailEndpoint,{method:"post",headers:{"Content-type":"application/json","client-token":n["client-token"],"time-stamp":n["time-stamp"],"time-signature":n["time-signature"]},body:JSON.stringify({email:e})}).then(e=>e.json()).then(e=>e).catch(e=>e)}console.warn("'email' isn't given to checkEmail!")}function p(e){return async function(n=null){if(n&&n.preventDefault(),/(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])/g.test(e.userEmail)){const n=document.querySelector("#reset_password_input");n.innerHTML='\n        <div id="reset_loader">\n            <div class="spinner-border text-primary" style="width:3rem; height:3rem;" role="status">\n                <span class="visually-hidden">Loading...</span>\n            </div>\n            <h4>Loading...</h4>\n        </div>\n    ';const t={resCode:200,message:"success"};if(200===t.resCode){console.log(t),n.innerHTML=function(e=null){if(e)return`\n        <p>The reset link has been sent to ${e.userEmail}. Please reset your password in 10 mins!</p>\n        `;console.warn("'state' isn't given to emailIsSent!")}(e);const i=await a(),o=await fetch(s.sendResetPasswordEndpoint,{method:"post",headers:{"Content-type":"application/json","client-token":i["client-token"],"time-stamp":i["time-stamp"],"time-signature":i["time-signature"]},body:JSON.stringify({email:e.userEmail})}).then(e=>e.json()).then(e=>e).catch(e=>e);console.log(o)}else{n.innerHTML=e.resetForm;const i=n.querySelector("#submit_email"),s=i.querySelector("input");s.value=e.userEmail,s.classList.remove("is-invalid"),s.classList.remove("is-valid"),i.onsubmit=p,console.log(t.message),alert(t.message)}}else{const t=n.target.querySelector("input");if(t.value){401===(await u(t.value)).resCode&&(e.userEmail=t.value,p(e)())}else t.classList.add("is-invalid")}}}async function m(e){this.classList.remove("is-invalid"),this.classList.remove("is-valid");const n=e.target.value;if(n){const e=await a();200===(await fetch(s.verifyEmailEndpoint,{method:"post",headers:{"Content-type":"application/json","client-token":e["client-token"],"time-stamp":e["time-stamp"],"time-signature":e["time-signature"]},body:JSON.stringify({email:n})}).then(e=>e.json()).then(e=>e).catch(e=>e)).resCode?this.classList.add("is-valid"):this.classList.add("is-invalid")}}async function f(e){this.classList.remove("is-invalid"),this.classList.remove("is-valid");const n=e.target.value;if(n){const e=await a();200===(await fetch(s.verifyPhoneEndpoint,{method:"post",headers:{"Content-type":"application/json","client-token":e["client-token"],"time-stamp":e["time-stamp"],"time-signature":e["time-signature"]},body:JSON.stringify({phone:n})}).then(e=>e.json()).then(e=>e).catch(e=>e)).resCode?this.classList.add("is-valid"):this.classList.add("is-invalid")}}const h={name:"",email:"",phone:"",pending:60,countdownTimer:null};async function v(){const e=document.querySelector(".container");e.innerHTML=function(e="",n="",t=""){return`\n    <div id="signup_form">\n        <div>\n            <a href="#"><img src="${s.host}/images/eridu_logo.png" alt="eridu_logo"></a>\n        </div>\n        <h1>Register</h1>\n        <div id="form_wrapper">\n            <form action="" id="eridu_signup_form" class="form-group">\n                <div class="input-group mt-3 mb-3">\n                    <span class="input-group-text"><i class="fas fa-user"></i></span>\n                    <input data-type="name" value="${e}" type="text" class="form-control" aria-label="name"\n                        placeholder="Your Name" required>\n                </div>\n                <div class="input-group mb-3">\n                    <span class="input-group-text"><i class="fas fa-envelope"></i></span>\n                    <input data-type="email" value="${n}" type="email" inputmode="email" class="form-control"\n                        aria-label="email" placeholder="Email" required>\n                    <div class="invalid-feedback">This Email is in use! Please choose another email</div>\n                    <div class="valid-feedback">This email is available!</div>\n                </div>\n                <div class="input-group mb-3">\n                    <span class="input-group-text"><i class="fas fa-phone-alt"></i></span>\n                    <input data-type="phone" value="${t}" type="number" inputmode="numeric" class="form-control"\n                        aria-label="phone number" placeholder="Phone Number" required>\n                    <div class="invalid-feedback">This phone number is in use! Please choose another one</div>\n                    <div class="valid-feedback">This phone number is available!</div>\n                </div>\n                <div class="input-group mb-3">\n                    <span class="input-group-text"><i class="fas fa-lock"></i></span>\n                    <input data-type="password" type="password" class="form-control" aria-label="new password"\n                        placeholder="New Password" required>\n                    <span class="input-group-text"><i class="fas fa-eye"></i></span>\n                    <div class="invalid-feedback">Your passwords do not match!</div>\n                </div>\n                <div class="input-group mb-3">\n                    <span class="input-group-text"><i class="fas fa-lock"></i></span>\n                    <input data-type="confirm_password" type="password" class="form-control"\n                        aria-label="confirm password" placeholder="Confirm Password" required>\n                    <span class="input-group-text"><i class="fas fa-eye"></i></span>\n                    <div class="invalid-feedback">Your passwords do not match!</div>\n                </div>            \n            </form>\n        </div>\n        <div>\n            <div><a class="btn btn-primary" href="#">Back</a></div>\n            <input value="Sign Up" type="submit" class="btn btn-warning" id="signup_next_step" form="eridu_signup_form">\n        </div>\n    </div>\n    `}(h.name,h.email,h.phone),[...document.querySelectorAll("input[type=password]")].forEach(e=>{e.parentNode.querySelectorAll("span")[1].onclick=function(e){e.stopPropagation();const n=this.parentNode.querySelector("input");"password"===n.type?(this.innerHTML='<i class="fas fa-eye-slash"></i>',n.type="text"):(this.innerHTML='<i class="fas fa-eye"></i>',n.type="password")}});e.querySelector("form").onsubmit=y,[...document.querySelectorAll("input[type=password]")].forEach(e=>{e.oninput=g}),function(){const e=document.querySelector("input[data-type=email]"),n=document.querySelector("input[data-type=phone]");function t(){this.classList.remove("is-invalid"),this.classList.remove("is-valid")}e.oninput=t,n.oninput=t,e.onblur=m,n.onblur=f}(),function(){const e=document.querySelector("input[data-type=password]"),n=document.querySelector("input[data-type=confirm_password]");function t(t){e.value.trim()&&n.value.trim()&&e.value!==n.value&&(e.classList.add("is-invalid"),n.classList.add("is-invalid"))}e.onchange=t,n.onchange=t}()}async function y(e){e.preventDefault();const n=[...document.querySelectorAll("input")].reduce((e,n)=>(e[n.dataset.type]=n.value,e),{});if(h.name=n.name,h.email=n.email,h.phone=n.phone,n.password===n.confirm_password){const e=document.querySelector("#form_wrapper");e.style.justifyContent="center",e.innerHTML=w();const t=document.querySelector("#signup_form > div:last-child");t.style.display="none";const i=await a();let o=await fetch(s.signupEndpoint,{method:"post",headers:{"Content-type":"application/json","client-token":i["client-token"],"time-stamp":i["time-stamp"],"time-signature":i["time-signature"]},body:JSON.stringify({name:n.name,email:n.email,phone:n.phone,password:n.password})}).then(e=>e.json()).then(e=>e).catch(e=>e);201===o.resCode?(console.log("signup success"),t.style.display="flex",window.location.hash="#dashboard",localStorage.setItem("token",o.token)):(console.log(o.message),alert(o.message),e.style.justifyContent="flex-start",v())}else!function(){const e=document.querySelector("input[data-type=password]"),n=document.querySelector("input[data-type=confirm_password]");e.classList.add("is-invalid"),n.classList.add("is-invalid")}()}function g(){const e=document.querySelector("input[data-type=password]"),n=document.querySelector("input[data-type=confirm_password]");e.classList.remove("is-invalid"),n.classList.remove("is-invalid")}function w(){return'\n        <div id="regiser_form_loader">\n            <div class="spinner-border text-warning" style="width:3rem; height:3rem;" role="status">\n                <span class="visually-hidden">Loading...</span>\n            </div>\n            <h4>Loading...</h4>\n        </div>\n    '}function b(e=null){e&&(console.log("get state"),"/dashboard"!==window.location.pathname&&(window.location.pathname="/dashboard"))}function k(e=null){if(e){"/"!==window.location.pathname&&(window.location.hash="",window.location.pathname="/");new URLSearchParams(window.location.search).get("jwt")&&!e.redirected&&(window.location.hash="forgetpassword/reset",e.redirected=!0);const n=window.location.hash.toLowerCase();n.includes("forgetpassword")?d():n.includes("signup")?v():l()}}window.onload=async function(){const e={redirected:!1},n=localStorage.getItem("token")||sessionStorage.getItem("token");if(n){await o(n)?(console.log("passed"),b(e)):l()}else k(e);window.onhashchange=async function(){const n=localStorage.getItem("token")||sessionStorage.getItem("token"),t=window.location.hash.toLowerCase();console.log("path changes! "+t);await o(n)?b(e):k(e)}}}]);